#pragma version 10

// This TEAL was generated by TEALScript v0.100.2
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
int 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	// The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?
	err

// emitTicket(string,string,uint64,uint64)uint64
*abi_route_emitTicket:
	// The ABI return prefix
	byte 0x151f7c75

	// cost: uint64
	txna ApplicationArgs 4
	btoi

	// quantity: uint64
	txna ApplicationArgs 3
	btoi

	// unitName: string
	txna ApplicationArgs 2
	extract 2 0

	// name: string
	txna ApplicationArgs 1
	extract 2 0

	// execute emitTicket(string,string,uint64,uint64)uint64
	callsub emitTicket
	itob
	concat
	log
	int 1
	return

// emitTicket(name: string, unitName: string, quantity: uint64, cost: uint64): AssetID
emitTicket:
	proto 4 1

	// contracts/TokensLottery.algo.ts:9
	// this.assetId.value = sendAssetCreation({
	//       configAssetName: name,
	//       configAssetUnitName: unitName,
	//       configAssetDecimals: 0,
	//       configAssetTotal: quantity,
	//     })
	byte 0x61737365744964 // "assetId"
	itxn_begin
	int acfg
	itxn_field TypeEnum

	// contracts/TokensLottery.algo.ts:10
	// configAssetName: name
	frame_dig -1 // name: string
	itxn_field ConfigAssetName

	// contracts/TokensLottery.algo.ts:11
	// configAssetUnitName: unitName
	frame_dig -2 // unitName: string
	itxn_field ConfigAssetUnitName

	// contracts/TokensLottery.algo.ts:12
	// configAssetDecimals: 0
	int 0
	itxn_field ConfigAssetDecimals

	// contracts/TokensLottery.algo.ts:13
	// configAssetTotal: quantity
	frame_dig -3 // quantity: uint64
	itxn_field ConfigAssetTotal

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	itxn CreatedAssetID
	app_global_put

	// contracts/TokensLottery.algo.ts:15
	// this.cost.value = cost
	byte 0x636f7374 // "cost"
	frame_dig -4 // cost: uint64
	app_global_put

	// contracts/TokensLottery.algo.ts:16
	// return this.assetId.value;
	byte 0x61737365744964 // "assetId"
	app_global_get
	retsub

// transferLottery(pay,uint64)void
*abi_route_transferLottery:
	// quantity: uint64
	txna ApplicationArgs 1
	btoi

	// payment: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==

	// argument 1 (payment) for transferLottery must be a pay transaction
	assert

	// execute transferLottery(pay,uint64)void
	callsub transferLottery
	int 1
	return

// transferLottery(payment: PayTxn, quantity: uint64): void
transferLottery:
	proto 2 0

	// contracts/TokensLottery.algo.ts:20
	// verifyPayTxn(payment, {
	//       sender: payment.sender,
	//       amount: { greaterThan: this.cost.value * quantity },
	//     })
	// verify sender
	frame_dig -1 // payment: PayTxn
	gtxns Sender
	frame_dig -1 // payment: PayTxn
	gtxns Sender
	==

	// transaction verification failed: {"txn":"payment","field":"sender","expected":"payment.sender"}
	assert

	// verify amount
	frame_dig -1 // payment: PayTxn
	gtxns Amount
	byte 0x636f7374 // "cost"
	app_global_get
	frame_dig -2 // quantity: uint64
	*
	>

	// transaction verification failed: {"txn":"payment","field":"amount","condition":"greaterThan","expected":">this.cost.value * quantity"}
	assert

	// contracts/TokensLottery.algo.ts:25
	// sendAssetTransfer({
	//       assetReceiver: payment.sender,
	//       xferAsset: this.assetId.value,
	//       assetAmount: quantity,
	//     })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// contracts/TokensLottery.algo.ts:26
	// assetReceiver: payment.sender
	frame_dig -1 // payment: PayTxn
	gtxns Sender
	itxn_field AssetReceiver

	// contracts/TokensLottery.algo.ts:27
	// xferAsset: this.assetId.value
	byte 0x61737365744964 // "assetId"
	app_global_get
	itxn_field XferAsset

	// contracts/TokensLottery.algo.ts:28
	// assetAmount: quantity
	frame_dig -2 // quantity: uint64
	itxn_field AssetAmount

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

*abi_route_createApplication:
	int 1
	return

*create_NoOp:
	method "createApplication()void"
	txna ApplicationArgs 0
	match *abi_route_createApplication

	// this contract does not implement the given ABI method for create NoOp
	err

*call_NoOp:
	method "emitTicket(string,string,uint64,uint64)uint64"
	method "transferLottery(pay,uint64)void"
	txna ApplicationArgs 0
	match *abi_route_emitTicket *abi_route_transferLottery

	// this contract does not implement the given ABI method for call NoOp
	err